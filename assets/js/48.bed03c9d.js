(window.webpackJsonp=window.webpackJsonp||[]).push([[48],{361:function(t,s,a){"use strict";a.r(s);var r=a(10),n=Object(r.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"github"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github"}},[t._v("#")]),t._v(" gitHub")]),t._v(" "),s("h2",{attrs:{id:"github小绿点不出现的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github小绿点不出现的问题"}},[t._v("#")]),t._v(" gitHub小绿点不出现的问题")]),t._v(" "),s("h3",{attrs:{id:"解决办法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#解决办法"}},[t._v("#")]),t._v(" 解决办法：")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("git config user.name 查看本地项目的用户名 "),s("br"),t._v("\ngit config user.email  查看本地项目的邮箱")])]),t._v(" "),s("li",[s("p",[t._v("打开自己的gitHub --\x3e Settings --\x3e email，检查本地的用户名和邮箱是否与gitHub上的绑定的一致。\n"),s("br"),t._v("如下图所示：\n"),s("img",{attrs:{src:"https://i.loli.net/2019/06/15/5d046c37eea9247345.png",alt:""}})])]),t._v(" "),s("li",[s("p",[t._v("一致则小绿点能正常显示。"),s("br"),t._v("\n如果不一致，则使用命令："),s("br"),t._v("git config --global user.name <gitHub,s name>"),s("br"),t._v("git config --global user.email <gitHub,s email>")])]),t._v(" "),s("li",[s("p",[t._v("设置完成以后，可用git config user.name 和 git config user.email来查看。")])]),t._v(" "),s("li",[s("p",[t._v("比如，我昨天向仓库提交代码，但是用的不是我gitHub的账号，我想更改，应该怎么做呢？下面的教程就是把以前默认的用户push记录归到自己到名下："),s("br"),t._v("\noldName就是默认的本机器名称"),s("br"),t._v("\nnewName是gitHub账号名")])])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  git filter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("env"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("filter '\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$GIT_AUTHOR_NAME"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"oldName"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  then\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GIT_AUTHOR_NAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"newName"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GIT_AUTHOR_EMAIL")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"newEmail"')]),t._v("\n  fi\n  ' "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v("\n  \n  git filter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("env"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("filter '\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$GIT_COMMITTER_NAME"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"oldName"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  then\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GIT_COMMITTER_NAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"newName"')]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GIT_COMMITTER_EMAIL")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"newEmail"')]),t._v("\n  fi\n  ' "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("ol",{attrs:{start:"6"}},[s("li",[t._v("执行完以后：显示如下代码就是操作成功了。")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Ref "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'refs/heads/master'")]),t._v(" was rewritten"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("ol",{attrs:{start:"7"}},[s("li",[t._v("这个时候在执行：")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("git filter"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("branch "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("f "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("env"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v('filter "\n'),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GIT_AUTHOR_NAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'newName'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GIT_AUTHOR_EMAIL")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'newEmail'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GIT_COMMITTER_NAME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'newName'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GIT_COMMITTER_EMAIL")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'newEmail'")]),t._v('\n" '),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("HEAD")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("ol",{attrs:{start:"8"}},[s("li",[s("p",[t._v("然后重新提交代码：git push origin master。但是有冲突会报错。\n"),s("br"),t._v("鉴于我是个人的项目，所以直接执行 git push origin master -f。强制push到远端。")])]),t._v(" "),s("li",[s("p",[t._v("此时，gitHub上的commit记录都是你gitHub账号的name了。今天和昨天还有以前的都是如此。\n"),s("img",{attrs:{src:"https://i.loli.net/2019/06/15/5d0474550fa6413175.png",alt:""}})])]),t._v(" "),s("li",[s("p",[t._v("完成以后就可以看到昨天和今天commit记录的小绿点了。大家以后push的时候，记得先查看一下本地的name和email是否和仓库的一致。以免失误。")])])]),t._v(" "),s("h2",{attrs:{id:"github拉取远程分支-提示-fatal-refusing-to-merge-unrelated-histories"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github拉取远程分支-提示-fatal-refusing-to-merge-unrelated-histories"}},[t._v("#")]),t._v(" gitHub拉取远程分支，提示："),s("code",[t._v("fatal: refusing to merge unrelated histories")])]),t._v(" "),s("ol",[s("li",[t._v("这个问题是因为 两个 根本不相干的 git 库， 一个是本地库， 一个是远端库， 然后本地要去推送到远端， 远端觉得这个本地库跟自己不相干， 所以告知无法合并。")]),t._v(" "),s("li",[t._v("有两种方法可以解决：\n"),s("br"),t._v("第一种:"),s("br"),t._v("\n重新clone远端的代码。\n"),s("br"),t._v("第二种:"),s("br"),t._v("\n使用命令："),s("code",[t._v("git pull origin master --allow-unrelated-histories")]),t._v(" "),s("br"),t._v("\n后面加上 "),s("code",[t._v("--allow-unrelated-histories")]),t._v(" ， 把两段不相干的 分支进行强行合并")]),t._v(" "),s("li",[t._v("后面再push就可以了 git push gitlab master:init")]),t._v(" "),s("li",[s("a",{attrs:{href:"https://www.centos.bz/2018/03/git-%E5%87%BA%E7%8E%B0-fatal-refusing-to-merge-unrelated-histories-%E9%94%99%E8%AF%AF/",target:"_blank",rel:"noopener noreferrer"}},[t._v("传送门"),s("OutboundLink")],1)])]),t._v(" "),s("h2",{attrs:{id:"gitignore不生效的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#gitignore不生效的问题"}},[t._v("#")]),t._v(" .gitignore不生效的问题：")]),t._v(" "),s("h3",{attrs:{id:"把某些目录或文件加入忽略规则-按照上述方法定义后发现并未生效-原因是-gitignore只能忽略那些原来没有被追踪的文件-如果某些文件已经被纳入了版本管理中-则修改-gitignore是无效的。那么解决方法就是先把本地缓存删除-改变成未被追踪状态-然后再提交"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#把某些目录或文件加入忽略规则-按照上述方法定义后发现并未生效-原因是-gitignore只能忽略那些原来没有被追踪的文件-如果某些文件已经被纳入了版本管理中-则修改-gitignore是无效的。那么解决方法就是先把本地缓存删除-改变成未被追踪状态-然后再提交"}},[t._v("#")]),t._v(" 把某些目录或文件加入忽略规则，按照上述方法定义后发现并未生效，原因是.gitignore只能忽略那些原来没有被追踪的文件，如果某些文件已经被纳入了版本管理中，则修改.gitignore是无效的。那么解决方法就是先把本地缓存删除（改变成未被追踪状态），然后再提交：")]),t._v(" "),s("ol",[s("li",[t._v("git rm -r --cached .")]),t._v(" "),s("li",[t._v("git add .")]),t._v(" "),s("li",[t._v("git commit -m 'update .gitignore'")])])])}),[],!1,null,null,null);s.default=n.exports}}]);