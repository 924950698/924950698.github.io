(window.webpackJsonp=window.webpackJsonp||[]).push([[61],{359:function(s,n,a){"use strict";a.r(n);var e=a(10),t=Object(e.a)({},(function(){var s=this,n=s._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"网络层优化-请求层"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#网络层优化-请求层"}},[s._v("#")]),s._v(" 网络层优化 - 请求层")]),s._v(" "),n("h2",{attrs:{id:"第一章-webpack性能调优"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第一章-webpack性能调优"}},[s._v("#")]),s._v(" 第一章  webpack性能调优 "),n("br")]),s._v(" "),n("p",[n("b",[s._v("Http优化：减少请求次数； 减少单次请求花费的时间")]),n("br"),s._v("\n这两个问题直指我们日常开发中的常见操作——资源的压缩与合并。就是我们每天用的构建工具霸主：webpack")]),s._v(" "),n("p",[n("b",[s._v("webpack优化瓶颈在两个方面：")])]),s._v(" "),n("ol",[n("li",[s._v("webpack 的构建过程太花时间")]),s._v(" "),n("li",[s._v("webpack 打包的结果体积太大")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("module: {\n  rules: [\n    {\n      test: /\\.js$/,\n      exclude: /(node_modules|bower_components)/,\n      use: {\n        loader: 'babel-loader',\n        options: {\n          presets: ['@babel/preset-env']\n        }\n      }\n    }\n  ]\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("p",[s._v("解决：减少loader做太多事情 --- 以babel-loader为例子\n每个项目都会用到babel-loader加载器，它是强大，但也是慢的。\n我们最常用的就是使用include和exclude来避免不必要的转移（比如：node——modules）。但是，通过限定文件，带来的性能提升是有限的。除此之外，我们可以开启缓存，将转译记过缓存至系统文件，至少可以将bable-loader的工作效率提升两倍。"),n("code",[s._v("loader: 'babel-loader?cacheDirectory=true'")])]),s._v(" "),n("p",[n("br"),s._v(" "),n("b",[s._v("不要放过第三方库")]),s._v("\n第三方库以 node_modules 为代表，它们庞大得可怕，却又不可或缺。\n于对效率的考虑，我们这里为大家推荐 DllPlugin。")]),s._v(" "),n("p",[s._v("DllPlugin 是基于 Windows 动态链接库（dll）的思想被创作出来的。这个插件会把第三方库单独打包到一个文件中，这个文件就是一个单纯的依赖库。这个依赖库不会跟着你的业务代码一起被重新打包，只有当依赖自身发生版本变化时才会重新打包。")]),s._v(" "),n("p",[s._v("用 DllPlugin 处理文件，要分两步走：")]),s._v(" "),n("p",[s._v("基于 dll 专属的配置文件，打包 dll 库\n基于 webpack.config.js 文件，打包业务代码")]),s._v(" "),n("p",[s._v("以一个基于 React 的简单项目为例，我们的 dll 的配置文件可以编写如下：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const path = require('path')\nconst webpack = require('webpack')\n\nmodule.exports = {\n    entry: {\n      // 依赖的库数组\n      vendor: [\n        'prop-types',\n        'babel-polyfill',\n        'react',\n        'react-dom',\n        'react-router-dom',\n      ]\n    },\n    output: {\n      path: path.join(__dirname, 'dist'),\n      filename: '[name].js',\n      library: '[name]_[hash]',\n    },\n    plugins: [\n      new webpack.DllPlugin({\n        // DllPlugin的name属性需要和libary保持一致\n        name: '[name]_[hash]',\n        path: path.join(__dirname, 'dist', '[name]-manifest.json'),\n        // context需要和webpack.config.js保持一致\n        context: __dirname,\n      }),\n    ],\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br")])]),n("p",[n("b",[s._v("Happypack——将 loader 由单进程转为多进程")]),s._v("\nwebpack 是单线程的，就算此刻存在多个任务，你也只能排队一个接一个地等待处理。这是 webpack 的缺点，好在我们的 CPU 是多核的，Happypack 会充分释放 CPU 在多核并发方面的优势，帮我们把任务分解给多个子进程去并发执行，大大提升打包效率。")]),s._v(" "),n("p",[s._v("只需要我们把对 loader 的配置转移到 HappyPack 中去就好，我们可以手动告诉 HappyPack 我们需要多少个并发的进程：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const HappyPack = require('happypack')\n// 手动创建进程池\nconst happyThreadPool =  HappyPack.ThreadPool({ size: os.cpus().length })\n\nmodule.exports = {\n  module: {\n    rules: [\n      ...\n      {\n        test: /\\.js$/,\n        // 问号后面的查询参数指定了处理这类文件的HappyPack实例的名字\n        loader: 'happypack/loader?id=happyBabel',\n        ...\n      },\n    ],\n  },\n  plugins: [\n    ...\n    new HappyPack({\n      // 这个HappyPack的“名字”就叫做happyBabel，和楼上的查询参数遥相呼应\n      id: 'happyBabel',\n      // 指定进程池\n      threadPool: happyThreadPool,\n      loaders: ['babel-loader?cacheDirectory']\n    })\n  ],\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br")])]),n("ol",{attrs:{start:"2"}},[n("li",[s._v("构建结果体积压缩\n"),n("b",[s._v("文件结构可视化，找出导致体积过大的原因")]),s._v("\n这里为大家介绍一个非常好用的包组成可视化工具——"),n("a",{attrs:{href:"https://www.npmjs.com/package/webpack-bundle-analyzer",target:"_blank",rel:"noopener noreferrer"}},[s._v("webpack-bundle-analyzer"),n("OutboundLink")],1),s._v("，配置方法和普通的 plugin 无异，它会以矩形树图的形式将包内各个模块的大小和依赖关系呈现出来，格局如官方所提供这张图所示：\n"),n("img",{attrs:{src:"https://i.loli.net/2020/03/09/DZeAWIXLmK5Qosk.gif",alt:"165d838010b20a4c.gif"}})])]),s._v(" "),n("p",[s._v("在使用时，我们只需要将其以插件的形式引入：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin;\n \nmodule.exports = {\n  plugins: [\n    new BundleAnalyzerPlugin()\n  ]\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ol",{attrs:{start:"3"}},[n("li",[s._v("删除冗余代码\n一个比较典型的应用，就是 Tree-Shaking。\n这里我们以当下接受度较高的 UglifyJsPlugin 为例，看一下如何在压缩过程中对碎片化的冗余代码（如 console 语句、注释等）进行自动化删除：")])]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const UglifyJsPlugin = require('uglifyjs-webpack-plugin');\nmodule.exports = {\n plugins: [\n   new UglifyJsPlugin({\n     // 允许并发\n     parallel: true,\n     // 开启缓存\n     cache: true,\n     compress: {\n       // 删除所有的console语句    \n       drop_console: true,\n       // 把使用多次的静态值自动定义为变量\n       reduce_vars: true,\n     },\n     output: {\n       // 不保留注释\n       comment: false,\n       // 使输出的代码尽可能紧凑\n       beautify: false\n     }\n   })\n ]\n}\n\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("ol",{attrs:{start:"4"}},[n("li",[s._v("按需加载\n按需加载的思想："),n("br")])]),s._v(" "),n("p",[s._v("一次不加载完所有的文件内容，只加载此刻需要用到的那部分（会提前做拆分）\n"),n("br"),s._v("当需要更多内容时，再对用到的内容进行即时加载")]),s._v(" "),n("ol",{attrs:{start:"5"}},[n("li",[s._v("HTTP 压缩 和 Gzip 压缩原理")])]),s._v(" "),n("p",[s._v("HTTP 压缩就是以缩小体积为目的，对 HTTP 内容进行重新编码的过程。"),n("br"),s._v("\nGzip 的内核就是 Deflate，目前我们压缩文件用得最多的就是 Gzip。可以说，Gzip 就是 HTTP 压缩的经典例题。")]),s._v(" "),n("h2",{attrs:{id:"第二章-图片的优化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#第二章-图片的优化"}},[s._v("#")]),s._v(" 第二章 图片的优化")]),s._v(" "),n("p",[n("b",[s._v(" 不同业务场景下的图片方案选型 ")]),n("br"),s._v("\n二进制位数与色彩的关系: 在计算机中，像素用二进制数来表示。不同的图片格式中像素与二进制位数之间的对应关系是不同的。一个像素对应的二进制位数越多，它可以表示的颜色种类就越多，成像效果也就越细腻，文件体积相应也会越大。"),n("br")]),s._v(" "),n("p",[s._v("一个二进制位表示两种颜色（0|1 对应黑|白），如果一种图片格式对应的二进制位数有 n 个，那么它就可以呈现 2^n 种颜色。\n"),n("br")]),s._v(" "),n("p",[s._v("时下应用较为广泛的 Web 图片格式有 JPEG/JPG、PNG、WebP、Base64、SVG 等，我制作了一个表格，方便大家记录他们之间的区别：")]),s._v(" "),n("table",[n("thead",[n("tr",[n("th",[s._v("类型")]),s._v(" "),n("th",[s._v(".jpg")]),s._v(" "),n("th",[s._v(".png")]),s._v(" "),n("th",[s._v(".svg")]),s._v(" "),n("th",[s._v("base64")]),s._v(" "),n("th",[s._v("WebP")])])]),s._v(" "),n("tbody",[n("tr",[n("td",[s._v("特点")]),s._v(" "),n("td",[s._v("有损压缩；色彩丰富")]),s._v(" "),n("td",[s._v("无损压缩、质量高、体积大、支持透明")]),s._v(" "),n("td",[s._v("可缩放矢量图形；图片可无限放大而不失真；体积小；兼容性好")]),s._v(" "),n("td",[s._v("文本文件、依赖编码、小图标解决方案")]),s._v(" "),n("td",[s._v("Google 专为 Web 开发的一种旨在加快图片加载速度的图片格式，它支持有损压缩和无损压缩")])]),s._v(" "),n("tr",[n("td",[s._v("适用场景")]),s._v(" "),n("td",[s._v("大的背景图、轮播图或 Banner 图")]),s._v(" "),n("td",[s._v("呈现小的 Logo、颜色简单且对比强烈的图片或背景")]),s._v(" "),n("td",[s._v("1. 写代码一样定义 SVG，把它写在 HTML 里、成为 DOM 的一部分，"),n("br"),s._v("2. 把对图形的描述写入以 .svg 为后缀的独立文件")]),s._v(" "),n("td",[s._v("非常小的 Logo")]),s._v(" "),n("td",[s._v("WebP 像 JPEG 一样对细节丰富的图片信手拈来，像 PNG 一样支持透明，像 GIF 一样可以显示动态图片——它集多种图片文件格式的优点于一身")])]),s._v(" "),n("tr",[n("td",[s._v("缺陷")]),s._v(" "),n("td",[s._v("1. 处理矢量图形和 Logo 等线条感较强、颜色对比强烈的图像时，会比较模糊；"),n("br"),s._v("2. 不支持透明度处理")]),s._v(" "),n("td",[s._v("体积太大")]),s._v(" "),n("td",[s._v("1. 设计SVG可能会变得复杂"),n("br"),s._v("2. 在某些版本过低的浏览器上无法呈现"),n("br"),s._v("3. 电子邮件客户端支持有限")]),s._v(" "),n("td",[s._v("Base64 编码后，图片大小会膨胀为原文件的 4/3（这是由 Base64 的编码原理决定的）")]),s._v(" "),n("td",[s._v("兼容性不好")])])])])])}),[],!1,null,null,null);n.default=t.exports}}]);