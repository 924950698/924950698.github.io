(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{344:function(s,t,a){"use strict";a.r(t);var n=a(10),e=Object(n.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"前端自动化【源码链接】"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端自动化【源码链接】"}},[s._v("#")]),s._v(" 前端自动化【"),t("a",{attrs:{href:"https://github.com/924950698/autoTest",target:"_blank",rel:"noopener noreferrer"}},[s._v("源码链接"),t("OutboundLink")],1),s._v("】")]),s._v(" "),t("h2",{attrs:{id:"_1-1-简介-什么是前端自动化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-简介-什么是前端自动化"}},[s._v("#")]),s._v(" 1-1 简介：什么是前端自动化？")]),s._v(" "),t("p",[s._v("防止bug产生；带到线上造成更大的损失；"),t("br"),s._v("当前市场上流行的TypeScript， Eslint， flow， styleLint可以帮助我们提高代码质量，但是还不够。作为前端，前端自动化测试可以帮助我们提高代码的质量。自动化测试在后端已经比较普遍了，但是在前端普及的还比较少。"),t("br"),s._v("本次只作3种测试的讲解：")]),s._v(" "),t("ol",[t("li",[s._v("单元测试 (白盒-知道代码逻辑，写代码来测试；测试方法函数)(注：黑盒测试：不知道代码逻辑，通过点击功能去测试)")]),s._v(" "),t("li",[s._v("集成测试")]),s._v(" "),t("li",[s._v("End to End (端到端测试)")])]),s._v(" "),t("h2",{attrs:{id:"_2-2-正文-自动化测试原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-正文-自动化测试原理"}},[s._v("#")]),s._v(" 2-2 正文: 自动化测试原理")]),s._v(" "),t("h3",{attrs:{id:"_1-单元测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-单元测试"}},[s._v("#")]),s._v(" 1. 单元测试")]),s._v(" "),t("ol",[t("li",[s._v("创建index.html，math.js, math.test.js三个文件")]),s._v(" "),t("li",[s._v("在math.js中创建两个函数方法，并在index.html中引入math.js")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    function add(a, b) {\n        return a + b;\n    }\n\n    function minus(a, b) {\n        return a * b;\n    }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[s._v("在math.test.js中嵌入测试代码:")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    var result = add(3, 7);\n    var expected = 10; \n\n    if(result !== 10) {\n        throw Error(`3 + 7 应该等于 ${expected}, 但是却是${retult}`);\n    }\n\n    var result = minus(3, 3);\n    var expected = 0;\n\n    if(result !== 0) {\n        throw Error(` 3 - 3 应该等于${expected}, 但是却是${result} `);\n    }\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("ol",{attrs:{start:"4"}},[t("li",[s._v("验证：在浏览器中打开index.html文件，在控制台中可以输入add 或者 minus并回车可以看到该函数体；然后将math.test.js的代码粘贴到控制台中，按回车执行测试函数，显示结果：\n"),t("img",{attrs:{src:"https://i.loli.net/2019/11/16/p4T3NgZs2mCALKD.png",alt:"微信图片_20191116224820.png"}})])]),s._v(" "),t("p",[s._v("在控制台中可以明显检查到，减法函数报出的错误信息，方便开发人员快速修改。")]),s._v(" "),t("ol",{attrs:{start:"5"}},[t("li",[s._v("思考，能不能对上面的重复代码做一个封装呢？")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("// 创作一种语法做测试\n    function expect(result) {\n        return {\n            toBe: function(actual) {\n                if(result !== actual) {\n                    throw Error(`当前值不符合预期值， 预期是${actual}，结果是 ${result}`)\n                }\n            }\n        }\n    }\n\n    function test(desc, fn) {\n        try {\n            fn()\n            console.log(`${desc} 通过测试`);\n        }catch (e) {\n            console.log(`${desc} 没有通过测试 ${e}`);\n        }\n    }\n\n    test('测试加法 3 + 7', () => {\n        expect(add(3, 7)).toBe(10)\n    })\n\n    test('测试减法 3 - 3', () => {\n        expect(minus(3, 3)).toBe(10)\n    })\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br")])]),t("p",[s._v("粘贴到控制台中，显示为：\n"),t("img",{attrs:{src:"https://i.loli.net/2019/11/16/tvRG4hQ7kxAu2TF.png",alt:"微信图片_20191116225647.png"}})]),s._v(" "),t("p",[s._v("上面代码中，封装了expect方法来进行值比较，封装了test方法补充测试的描述信息。其实和当前市面上比较主流的测试框架Mocha， Jest里里面的语法原理都差不多。")]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("集成测试")]),s._v(" "),t("li",[s._v("End to End (端到端测试)")])]),s._v(" "),t("h2",{attrs:{id:"_2-3-使用jest修改自动化测试样例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-3-使用jest修改自动化测试样例"}},[s._v("#")]),s._v(" 2-3 使用Jest修改自动化测试样例")]),s._v(" "),t("ol",[t("li",[s._v("npm init生成包工具，下载jest@14.8.0版本,package.json中script命令test替换为jest")]),s._v(" "),t("li",[s._v("将math.js作为一个模块导出，")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    function add(a, b) {\n        return a + b;\n    }\n\n    function minus(a, b) {\n        return a - b;\n    }\n\n\n    module.exports = {\n        add,\n        minus\n    }\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[s._v("在math.test.js中引入模块：")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("    const math = require(\"./math.js\");\n    const { add, minus } = math;\n\n    test('测试加法 3 + 7', () => {\n        expect(add(3, 7)).toBe(10)\n    })\n\n    test('测试减法 3 - 3', () => {\n        expect(minus(3, 3)).toBe(0)\n    })\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("ol",{attrs:{start:"4"}},[t("li",[t("p",[s._v("运行命令： npm run test ，运行正确时结果如下图：\n"),t("img",{attrs:{src:"https://i.loli.net/2019/11/17/FB8dlSRgC7hcyxI.png",alt:"微信图片_20191117125438.png"}}),s._v(" "),t("br"),s._v("运行报错时如下图：\n"),t("img",{attrs:{src:"https://i.loli.net/2019/11/17/CfjDyQUrh8e76OJ.png",alt:""}})])]),s._v(" "),t("li",[t("p",[s._v("为什么math.js导出的需要时一个模块？"),t("br"),s._v("\n因为jest框架在前端帮助我们完成的是两类的内容：单元测试（单个模块测试）， 集成测试（多个模块测试）；必须要把math.js改造成一个模块，才能符合jest两大测试类型的要求。")])])]),s._v(" "),t("h2",{attrs:{id:"_2-4-jest简单配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-4-jest简单配置"}},[s._v("#")]),s._v(" 2-4 Jest简单配置")]),s._v(" "),t("ol",[t("li",[s._v("Jest包含默认配置，要更改现有配置，使其更加丰富。类似WebPack")]),s._v(" "),t("li",[t("code",[s._v("npx jest --init")]),s._v(" 进行一个初始化。之后会出现：是否选择jsdom环境；代码覆盖率报告；自动清除事件。完成以后出现jest.config.js文件（常用的jest配置都在这里）。\n将代码覆盖率报告放在coverage目录下")])]),s._v(" "),t("h4",{attrs:{id:"_1-code代码覆盖率"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-code代码覆盖率"}},[s._v("#")]),s._v(" 1. code代码覆盖率")]),s._v(" "),t("p",[s._v("执行"),t("code",[s._v("npx jest --coverage")]),s._v("生成代码覆盖率报告。\n"),t("img",{attrs:{src:"https://i.loli.net/2019/11/18/qciu1avmgX6h4TW.png",alt:"微信图片_20191118155550.png"}})]),s._v(" "),t("p",[s._v("会生成一个coverage目录，该目录下有一个index.html文件。打开该文件后，可以直观的看到当前代码覆盖率是100%，\n"),t("img",{attrs:{src:"https://i.loli.net/2019/11/18/YNeUnKuBPXT5F3o.png",alt:"微信图片_20191118155556.png"}}),s._v("\n3. jest.config.js中的coverageDirectory可以更改打包报告目录的名字。另外也可以在package.json中将命令替换成"),t("code",[s._v("coverage: jest --coverage")]),s._v(",之后在执行npm run coverage就生产code测试报告了。"),t("br"),s._v("\n4. 在项目中使用Esmodule语法对模块进行导出和使用，但是在node环境下不支持，需要使用babel转成commonJs的代码。"),t("br"),s._v("\n5. 下载babel版本："),t("code",[s._v("npm install @babel/core@7.4.5 @babel/preset-env@7.4.5 -D")]),s._v("。使用babel时对babel进行配置，创建.babelrc文件，在里面写")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('{\n    "presets": [\n        ["@babel/preset-env", {\n            "targets": {\n                "node": "current"\n            }\n        }]\n    ]\n}\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("含义：当前node环境不支持import语句，使用"),t("code",[s._v("@babel/preset-env")]),s._v("对import语句进行转换，转换成commenJS语法，node和Jest就可以识别了。"),t("br"),s._v("\n6. 执行npm run jest后，jest内部集成了babel-jest插件，它会检测当前环境是否安装了babel-core，"),t("br"),s._v("如果有，就会去取.babelre配置。"),t("br"),s._v("在运行测试之前，结合babel，先把代码做一次转换"),t("br"),s._v("运行转化过的测试用例，就符合commonJs规范")]),s._v(" "),t("ol",{attrs:{start:"7"}},[t("li",[s._v("大家如果想了解更多，可以去"),t("a",{attrs:{href:"https://jestjs.io/docs/en/getting-started.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Jest官网"),t("OutboundLink")],1),s._v("看一下，有详细的配置介绍说明和与ts的结合。")])]),s._v(" "),t("h2",{attrs:{id:"_2-5-jest中的匹配器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-5-jest中的匹配器"}},[s._v("#")]),s._v(" 2-5 Jest中的匹配器")]),s._v(" "),t("ol",[t("li",[s._v("删除math.js; math.test.js改名字为matchers.test.js并只保留一个测试用例。( "),t("code",[s._v("--watchAll")]),s._v("监视代码改动，自动执行)")])]),s._v(" "),t("h3",{attrs:{id:"常用的类型匹配器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用的类型匹配器"}},[s._v("#")]),s._v(" 常用的类型匹配器")]),s._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[s._v("toBe 是匹配器 matchers 类似 object.is ===")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("//假如用toBe测试以下内容：\n test('测试对象a与对象a相等', {\n     const a = {a: 1};\n     expect(a).toBe({a: 1});\n })\n\n // 这里由于指向的地址不一样，所以会报错。类似toBe()这种匹配器有很多种，下面介绍一下\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[s._v("toEqual () 只匹配内容，不匹配引用")]),s._v(" "),t("li",[s._v("toBeNull() 可以用来匹配null, undefined; 布尔类型")]),s._v(" "),t("li",[s._v("toBeUndefined() 前者匹配a是未定义的； toBeDefined() 后者匹配a是定义过的")]),s._v(" "),t("li",[s._v("toBeTruthy() 匹配a是否为真； toBeFalsy()匹配a是否为假")]),s._v(" "),t("li",[s._v("not() 取反匹配器")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(" test('not匹配器', {\n    const a = 1;\n    expect(a).not.toBeFalsy();\n    expect(a).toBeTruthy();\n })\n\n // a取false的反值，就相当于a为true\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ol",{attrs:{start:"8"}},[t("li",[s._v("Jest中有很多这种匹配器，我们不需要都记住，只需要记住其中核心的几个匹配器即可。")])]),s._v(" "),t("h3",{attrs:{id:"常用的数字相关的匹配器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用的数字相关的匹配器"}},[s._v("#")]),s._v(" 常用的数字相关的匹配器：")]),s._v(" "),t("ol",[t("li",[s._v("toBeGreaterThan()  匹配count比期望值大")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("test('toBeGreaterThan', {\n    const count = 10;\n    expect(count).toBeGreaterThan(9);\n})\n\n//匹配count比期望值9大\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[s._v("toBeLessThan() 匹配count比期望值小")]),s._v(" "),t("li",[s._v("toBeGreaterThanOrEqual() 匹配count大于等于期望值")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("test('toBeGreaterThanOrEqual', {\n    const count = 10;\n    expect(count).toBeGreaterThanOrEqual(10);\n})\n\n// 通过\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("ol",{attrs:{start:"4"}},[t("li",[s._v("toBeLessThanOrEqual() 匹配count小于等于期望值")]),s._v(" "),t("li",[s._v("toBeCloseTo() 匹配浮点数相加减的运算")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("test('toBeCloseTo', {\n    const a = 0.1;\n    const b = 0.2;\n    expect(a+ b).toBeCloseTo(0.3);\n})\n\n// 通过，在js中存在浮点数溢出的情况，不能用toEqual()\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("h3",{attrs:{id:"常用的字符串相关的匹配器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用的字符串相关的匹配器"}},[s._v("#")]),s._v(" 常用的字符串相关的匹配器")]),s._v(" "),t("ol",[t("li",[s._v("toMathch() 匹配变量中是否包含某个字符串")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("test('toBeCloseTo', {\n    const str = 'http://www.Allan-Liu.com';\n    expect(str).toBeMatch('Allan-Liu');//通过\n    expect(str).toBeMatch(/Allan-Liu/);//通过\n    expect(str).toBeMatch(/AllanLiu/); //失败\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"常用的数组相关的匹配器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用的数组相关的匹配器"}},[s._v("#")]),s._v(" 常用的数组相关的匹配器")]),s._v(" "),t("ol",[t("li",[s._v("toContain() 匹配数组中是否包含某一项 （比较常用）")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("test('toContain', {\n    const arr = ['www', 'Allan', 'Liu'];\n    // 或者 const arr1 = new Set(arr); 结果都是一样的（set和数组不同之处：元素都是唯一） \n    expect(arr).toContain('Allan');//通过\n    expect(arr).toContain(/AllanLiu/); //失败\n})\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("h3",{attrs:{id:"常用的处理异常情况的匹配器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#常用的处理异常情况的匹配器"}},[s._v("#")]),s._v(" 常用的处理异常情况的匹配器")]),s._v(" "),t("ol",[t("li",[s._v("toThrow()")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const throwNewErrorFunc = () => {\n    Throw new Error('this is a new error');\n}\n\ntest('toThrow', {   \n    expect(throwNewErrorFunc).toThrow() // 通过\n    expect(throwNewErrorFunc).toThrow('this is a new error') // 通过\n    expect(throwNewErrorFunc).toThrow('aaa') // 失败，必须要一致\n    expect(throwNewErrorFunc).toThrow(/this is a new error/) // 通过，正则也是可以的\n})\n\n//throwNewErrorFunc()是异常函数，toThrow()与该函数匹配\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])]),t("h4",{attrs:{id:"以上并不是jest中全部的匹配器-了解详情请戳jest官网-了解更多请戳jest官网"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#以上并不是jest中全部的匹配器-了解详情请戳jest官网-了解更多请戳jest官网"}},[s._v("#")]),s._v(" 以上并不是Jest中全部的匹配器，了解详情请戳"),t("a",{attrs:{href:"https://jestjs.io/docs/en/using-matchers",target:"_blank",rel:"noopener noreferrer"}},[s._v("Jest官网"),t("OutboundLink")],1),s._v("，了解更多请戳"),t("a",{attrs:{href:"https://jestjs.io/docs/zh-Hans/expect",target:"_blank",rel:"noopener noreferrer"}},[s._v("Jest官网"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"_2-6-jest命令行工具的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-6-jest命令行工具的使用"}},[s._v("#")]),s._v(" 2-6 Jest命令行工具的使用")]),s._v(" "),t("ol",[t("li",[s._v("用命令行启动vscode，在"),t("code",[s._v("ctrl+shift+p")]),s._v("中搜索下载install code command in PATH。如果搜不到有可能已经添加完成了。如下图："),t("br"),s._v(" "),t("img",{attrs:{src:"https://i.loli.net/2019/11/19/tHrxfmj8Vw2okMG.png",alt:"微信图片_20191119122327.png"}})]),s._v(" "),t("li",[s._v("运行npm run test时， 命令行一些按键的作用： （必须是使用git代码管理，Jest才知道哪些是改变的文件） "),t("br"),s._v("\nf: 只测试之前没有通过的用例，通过的不在测试。再次点击f退出模式"),t("br"),s._v("\na: 任何一个测试文件发生了改变，运行所有的测试用例"),t("br"),s._v("\no: 当更改一个文件的时候，只运行这个文件里的测试用例"),t("br"),s._v("\nt: 过滤模式，输入一个单词，执行以该单词结尾的用例"),t("br"),s._v("\nq: 退出对代码的监控"),t("br"),s._v("\nEnter：按回车重新运行测试 "),t("br"),s._v("\np: 筛选， 文件发生改变时，根据文件名称匹配关键词"),t("br")])]),s._v(" "),t("h2",{attrs:{id:"_2-7-异步代码的测试方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-7-异步代码的测试方法"}},[s._v("#")]),s._v(" 2-7 异步代码的测试方法")]),s._v(" "),t("ol",[t("li",[s._v("当异步函数调用一个回调函数时，该如何编写测试用例")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("const fetchData = (fn) => {\n  axios.get('******').then((res) => {\n    fn(res.data)\n  })\n}\n\n测试用例： \ntest( \"fetchData函数的测试用例：\", (done) => {\n  fetchData((data) => {\n    expect(data).toEqual({\n      sucess: true\n    })\n    done()      // 表明用例执行结束的位置，否则会提前结束用例的执行\n  })\n})\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[s._v("当异步函数返回一个请求时，测试用例如下")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v('const fetchData = () => {\n  return axios.get(\'******\')\n}\n\n测试用例：\ntest( "fetchData返回结果为{ sucess: true }", () => {\n  return fetchData().then((res) => {\n    expect(res.data).toEqual({\n      sucess: true\n    })\n  })\n})\n\ntest( "fetchData返回结果为404", () => {\n  expect.assertion(1);                // assertion(1) 表示jest会执行1次断言\n  return fetchData().catch((e) => {\n    expect(e.toString().indexOf(\'404) > -1).toBe(true)\n  })\n})\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("h2",{attrs:{id:"_2-11-jest中的mock"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-11-jest中的mock"}},[s._v("#")]),s._v(" 2-11 Jest中的Mock")]),s._v(" "),t("ol",[t("li",[s._v("jest.fn()可以用来进行函数模拟")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(" * jest.fn()的作用 \n * 1. 捕获函数的调用和结果 已经this指向和执行顺序 mock()\n * 2. 可以自由设置返回结果 mockReturnValue()、mockReturnValueOnce()\n * 3. 异步获取数据改变为同步模拟数据 mockResolvedValue()、mockResolvedValueOnce()\n * \n * mock函数：\n * mockImplementation()\n * mockImplementationOnce()方法等价于jest.mock()中的 () => {}, 可以处理逻辑\n * toBeCallWidth() 每一次的调用结果\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("p",[s._v("还有其他的一些函数，详细可以参考"),t("a",{attrs:{href:"https://jestjs.io/zh-Hans/docs/api",target:"_blank",rel:"noopener noreferrer"}},[s._v("官网"),t("OutboundLink")],1)]),s._v(" "),t("h3",{attrs:{id:"jest学习暂停"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jest学习暂停"}},[s._v("#")]),s._v(" Jest学习暂停")])])}),[],!1,null,null,null);t.default=e.exports}}]);